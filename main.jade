head
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
    meta(name='mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name='format-detection', content='telephone=no')
body
    +home

template(name='home')
    .ui.compact.inverted.fluid.menu
        .item
            +loginButtons
        if currentUser
            .item #{user.points}
            a.item.add
                |add (alt shift n)
            .item
                |my cloud:
                each user.cloud
                    .ui.small.label.userCloudTag #{name} #{points}
    .ui.fitted.divider
    unless $.Session.get 'addId'
        .ui.vertical.segment.tagCloud
            each authorFilterList
                .ui.compact.right.labeled.icon.active.button.unfilterAuthor
                    i.user.icon
                    strong #{this}
            each tagFilterList
                .ui.compact.right.labeled.icon.active.button.unfilterTag
                    strong #{this}
                    i.icon.remove
            each globalTags
                .ui.compact.small.button.filterTag
                    |#{name}
                    small #{count}
    .ui.fitted.divider
    .ui.segments.notop
        each items
            .ui.segment
                +item
template(name='item')
    if isAuction
        // .auction.viewarea
        //     .ui.inverted.dimmer
        //     .content
        //         .ui.large.grey.labels
        //             each tags
        //                 .ui.label.itemtag #{this}
        //     +markdown
        //         #{body}
        //     p ends #{whenEnd}
        //     p high bid: #{bid}
        //     p high bidder: #{bidder.username} #{bidder.points}
        //     p author: #{author.username} #{author.points}
        //     .ui.button.bid(class=canBid)
        //         |bid
        //         | #{newBid}
    unless isAuction
        if isEditing
            .editarea
                +editing
        else
            .viewarea
                .ui.inverted.dimmer
                .content
                    .ui.large.grey.labels
                        each tags
                            .ui.basic.label.itemtag #{this}
                +markdown
                    #{body}
                .extra
                    if currentUser
                        if isAuthor
                            .ui.small.button.edit
                                i.edit.icon
                                |edit
                        .ui.small.button.clone
                            i.fork.icon
                            |clone
                        .ui.small.button.vote(class=voteButtonClass)
                            i.icon(class=voteIconClass)
                            | #{votes}
                        | created #{whenCreated}
                        .ui.segment.username(class=authorButtonClass)
                            i.user.icon
                            | #{author.username} #{author.points}
                            each userShortCloud
                                .ui.small.label #{name} #{count}

template(name='editing')
    .ui.form
        .field: select#tagselector.bs.ui.multiple.search(multiple='true')
            each tags
                option(value=this selected='selected')= this
        .field: textarea.bs(placeholder='add markdown')= body
    .ui.hidden.fitted.divider
    .extra
        .ui.active.button.save
            |save
            small (ctrl enter)
        .ui.icon.button.delete
            i.remove.icon
            |delete
