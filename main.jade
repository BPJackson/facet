head
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
    meta(name='mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name='format-detection', content='telephone=no')
body
    +home

template(name='home')
    .ui.compact.inverted.fluid.menu
        a.item.header.home
             |facet
        if currentUser
            a.item.add(class=addButtonClass)
                i.add.icon 
        +loginButtons
        .item
            if currentUser
                strong #{user.points}
                each myShortCloud
                    a.ui.inverted.black.label.userCloudTag(class=userCloudTagClass) #{name}
    .ui.fitted.divider
    unless $.Session.get 'addId'
        .ui.vertical.segment.tagCloud
            each selectedAuthor
                .ui.compact.large.active.button.unselectAuthor
                    i.user.icon
                    strong #{this}
            each selectedTags
                .ui.compact.large.active.button.unselectTag(class=selectedTagsClass)
                    strong #{this}
            each globalTags
                .ui.compact.fade.button.selectTag(class=globalTagsClass)
                    |#{name}
                    // small #{count}
    .ui.fitted.divider
    .ui.segments.notop
        each items
            .ui.segment
                +item

template(name='item')
    if isAuction
        .auction.viewarea
            .ui.buttons
                each tags
                    .ui.button.itemtag(class=itemTagClass) #{this}
            +markdown
                #{body}
            p ends #{whenEnd}
            p high bid: #{bid}
            p high bidder: #{bidder.username} #{bidder.points}
            p author: #{author.username} #{author.points}
            .ui.button.bid(class=canBid)
                |bid
                | #{newBid}
    unless isAuction
        if isEditing
            .editarea
                +editing
        else
            // .ui.buttons
            each tags
                .ui.button.itemtag(class=itemTagClass) #{this}
            .ui.segment.itemContent
                +markdown
                    #{body}
                if currentUser
                    if isAuthor
                        .ui.button.edit
                            |edit
                    .ui.button.clone
                        |clone
                    .ui.button.vote(class=voteButtonClass)
                        i.icon(class=voteIconClass)
                        | #{votes}
                    .ui.button.username(class=authorButtonClass)
                        i.user.icon
                        | #{author.username} #{author.points}
                        each otherUserShortCloud
                            .ui.label(class=userCloudTagClass) #{name}
                    .ui.basic.label #{whenCreated}

template(name='editing')
    unless isAuction
        .ui.form
            .field: select#tagselector.bs.ui.multiple.search(multiple='true')
                each tags
                    option(value=this selected='selected') #{this}
            .field: textarea.bs(placeholder='add markdown')  #{body}
        .ui.hidden.fitted.divider
    .bottomGroup
        .ui.icon.button.save
            i.checkmark.icon
        .ui.icon.right.floated.button.auctionize
            i.legal.icon
        .ui.icon.right.floated.button.delete
            i.remove.icon
