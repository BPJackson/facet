head
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
    meta(name='mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name='format-detection', content='telephone=no')
body
    +home

template(name='home')
    .ui.compact.inverted.fluid.menu
        .item
            +loginButtons
        if currentUser
            .item #{user.points}
            a.item.add
                |add (alt shift n)
            .item
                |my cloud:
                each user.cloud
                    .ui.small.label.userCloudTag #{name} #{points}
    .ui.fitted.divider
    .ui.vertical.inverted.segment
        each authorFilterList
            .ui.compact.button.unfilterAuthor
                i.user.icon
                strong #{this}
                i.icon.remove
        each tagFilterList
            .ui.inverted.compact.button.unfilterTag
                strong #{this}
                i.icon.remove
        each globalTags
            .ui.compact.secondary.button.filterTag
                |#{name}
                small #{count}
    .ui.segments.nope
        each items
            .ui.segment
                +item
template(name='item')
    if isAuction
        .auction.viewarea
            .ui.inverted.dimmer
            .content
                .ui.large.grey.labels
                    each tags
                        .ui.label.itemtag #{this}
            +markdown
                #{body}
            p ends #{whenEnd}
            p high bid: #{bid}
            p high bidder: #{bidder.username}
            p author: #{author.username}
            .ui.basic.button.bid(class=canBid)
                |bid
                | #{newBid}
    unless isAuction
        if isEditing
            .editarea
                +editing
        else
            .viewarea
                .ui.inverted.dimmer
                .content
                    .ui.large.grey.labels
                        each tags
                            .ui.label.itemtag #{this}
                +markdown
                    #{body}
                .extra
                    if isAuthor
                        .ui.basic.small.button.edit
                            i.edit.icon
                            |edit
                    if canClone
                        .ui.basic.small.button.clone
                            i.fork.icon
                            |clone
                    .ui.basic.small.buttons
                        .ui.button.upvote(class=upButtonClass)
                            i.icon(class=upIconClass)
                            | #{upvotes}
                        .ui.button.downvote(class=downButtonClass)
                            i.icon(class=downIconClass)
                            | #{downvotes}
                    .ui.top.right.attached.label #{points} points
                    .ui.basic.small.button.username(class=authorButtonClass)
                        i.user.icon
                        | #{author.username}
                        .ui.circular.label #{author.points}
                        // i.cloud.icon`
                        each author.cloud
                            .ui.small.label #{name} #{count}
                    // .ui.label created #{whenCreated}

template(name='editing')
    .ui.form
        .field: select#tagselector.bs.ui.multiple.search(multiple='true')
            each tags
                option(value=this selected='selected')= this
        .field: textarea.bs(placeholder='add markdown')= body
    .ui.hidden.fitted.divider
    .extra
        .ui.basic.active.button.save
            |save
            small (ctrl enter)
        .ui.basic.icon.button.delete
            i.remove.icon
            |delete
